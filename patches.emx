Only in new: config.h
Only in new: patches.emx
Only in new/lib: Makefile.emx
Only in new/lib: gnuregex.def
Only in new/src: Makefile.emx
Only in new/src: m4.def
diff -cbr orig/checks/check-them.cmd new/checks/check-them.cmd
*** orig/checks/check-them.cmd	Wed Jul 06 01:13:42 1994
--- new/checks/check-them.cmd	Mon Nov 14 21:13:02 1994
***************
*** 1,13 ****
  #!/bin/sh
  # Check GNU m4 against examples from the manual source.
  # Copyright (C) 1992 Free Software Foundation, Inc.
  
! out=/tmp/m4-out.$$
! err=/tmp/m4-err.$$
! xout=/tmp/m4-xout.$$
! xerr=/tmp/m4-xerr.$$
  
! trap "rm -f $out $err $xout $xerr; exit 1" 1 2 15
  
  m4 --version
  
--- 1,15 ----
+ extproc sh
+ 
  #!/bin/sh
  # Check GNU m4 against examples from the manual source.
  # Copyright (C) 1992 Free Software Foundation, Inc.
  
! out=m4$$.out
! err=m4$$.err
! xout=m4$$x.out
! xerr=m4$$x.err
  
! trap "rm -f $out $err $xout $xerr; exit 1" 2 15
  
  m4 --version
  
diff -cbr orig/checks/get-them.cmd new/checks/get-them.cmd
*** orig/checks/get-them.cmd	Thu Nov 25 05:15:58 1993
--- new/checks/get-them.cmd	Mon Nov 14 21:13:02 1994
***************
*** 1,12 ****
  #!/bin/sh
  # Extract all examples from the manual source.
  # Copyright (C) 1992 Free Software Foundation, Inc.
  
  # This script is for use with GNU awk.
  
! FILE=${1-/dev/null}
  
! $AWK '
  
  BEGIN {
    node = "";
--- 1,14 ----
+ extproc gawk -f
+ 
  #!/bin/sh
  # Extract all examples from the manual source.
  # Copyright (C) 1992 Free Software Foundation, Inc.
  
  # This script is for use with GNU awk.
  
! # FILE=${1-/dev/null}
  
! # $AWK '
  
  BEGIN {
    node = "";
***************
*** 65,68 ****
  END {
    printf("\n");
  }
! ' $FILE
--- 67,71 ----
  END {
    printf("\n");
  }
! 
! # ' $FILE
diff -cbr orig/src/builtin.c new/src/builtin.c
*** orig/src/builtin.c	Wed Aug 31 18:45:12 1994
--- new/src/builtin.c	Mon Nov 14 21:13:02 1994
***************
*** 783,789 ****
--- 783,793 ----
  static void
  m4_sysval (struct obstack *obs, int argc, token_data **argv)
  {
+ #ifdef __EMX__
+   shipout_int (obs, sysval);
+ #else
    shipout_int (obs, (sysval >> 8) & 0xff);
+ #endif
  }
  
  /*-------------------------------------------------------------------------.
***************
*** 1073,1085 ****
--- 1077,1115 ----
  | Use the first argument as at template for a temporary file name.  |
  `------------------------------------------------------------------*/
  
+ #ifdef __EMX__
+ static void
+ emx_mktemp(char *file)
+ {
+   char fname[32], *tmp;
+   if ((tmp = getenv("TMP")) != NULL)
+   {
+     strcpy(fname, file);
+     strcpy(file, tmp);
+     if (file[strlen(file) - 1] != '\\')
+       strcat(file, "\\");
+     strcat(file, fname);
+   }
+   mktemp(file);
+ }
+ #endif
+ 
  static void
  m4_maketemp (struct obstack *obs, int argc, token_data **argv)
  {
+ #ifdef __EMX__
+   char name[256];
+   if (bad_argc (argv[0], argc, 2, 2))
+     return;
+   strcpy (name, ARG(1));
+   emx_mktemp (name);
+   obstack_grow (obs, name, strlen(name));
+ #else
    if (bad_argc (argv[0], argc, 2, 2))
      return;
    mktemp (ARG (1));
    obstack_grow (obs, ARG (1), strlen (ARG (1)));
+ #endif
  }
  
  /*----------------------------------------.
diff -cbr orig/src/m4.c new/src/m4.c
*** orig/src/m4.c	Wed Nov 02 05:14:28 1994
--- new/src/m4.c	Mon Nov 14 21:20:14 1994
***************
*** 135,140 ****
--- 135,141 ----
      fprintf (stderr, "Try `%s --help' for more information.\n", program_name);
    else
      {
+       printf ("\nGNU " PRODUCT ", version " VERSION "\n\n");
        printf ("Usage: %s [OPTION]... [FILE]...\n", program_name);
        fputs ("\
  Mandatory or optional arguments to long options are mandatory or optional\n\
***************
*** 257,262 ****
--- 258,275 ----
    macro_definition *defines;
    FILE *fp;
  
+ #ifdef __EMX__
+   _response(&argc, &argv);
+   _wildcard(&argc, &argv);
+   setvbuf(stdout, NULL, _IOFBF, BUFSIZ);
+ 
+   strlwr ((char *) argv[0]);
+   program_name = strrchr (argv[0], '.');
+   if (program_name != NULL && strcmp(program_name, ".exe") == 0)
+     * (char *) program_name = 0;
+   program_name = strrchr (argv[0], '\\');
+   if (program_name == NULL)
+ #endif
    program_name = argv[0];
  
    include_init ();
***************
*** 453,458 ****
--- 466,473 ----
  
    if (optind == argc)
      {
+       if (isatty (fileno (stdin)))
+ 	usage (0);
        push_file (stdin, "stdin");
        expand_input ();
      }
diff -cbr orig/lib/obstack.c new/lib/obstack.c
*** orig/lib/obstack.c	Mon Oct 31 14:02:04 1994
--- new/lib/obstack.c	Sun Feb 22 20:03:14 1998
***************
*** 15,20 ****
--- 15,24 ----
  along with this program; if not, write to the Free Software
  Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */
  
+ #ifdef HAVE_CONFIG_H
+ #include <config.h>
+ #endif
+ 
  #include "obstack.h"
  
  /* This is just to get __GNU_LIBRARY__ defined.  */

